{"version":3,"sources":["components/total/Total.js","components/history/HistoryItem.js","components/history/History.js","components/operation/Operation.js","App.js","index.js"],"names":["Total","resultExpenses","resultIncome","totalBalance","className","HistoryItem","transaction","delTransaction","add","description","amount","onClick","id","transactions","map","item","key","Operation","addTransaction","addAmount","addDescription","type","placeholder","onChange","value","App","state","JSON","parse","localStorage","getItem","Date","toString","parseFloat","push","setState","getTotalBalance","e","target","getIncome","reduce","acc","getExpenses","console","log","filter","this","addStorage","setItem","stringify","History","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.febed524.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Total({resultExpenses, resultIncome, totalBalance}){\n    return(\n        <section className=\"total\">\n        <header className=\"total__header\">\n            <h3>Kontostand</h3>\n            <p className=\"total__balance\">{totalBalance} €</p>\n        </header>\n        <div className=\"total__main\">\n            <div className=\"total__main-item total__income\">\n                <h4>Einkommen</h4>\n                <p className=\"total__money total__money-income\">\n                    {resultIncome} €\n                </p>\n            </div>\n            <div className=\"total__main-item total__expenses\">\n                <h4>Verbrauch</h4>\n                <p className=\"total__money total__money-expenses\">\n                    {resultExpenses}€\n                </p>\n            </div>\n        </div>\n    </section>\n    );\n}\nexport default Total;","\nimport React from 'react';\n\n\nconst HistoryItem = ({transaction, delTransaction}) => (\n    \n    <li \n        className={`history__item ${transaction.add ?\n        'history__item-plus' :\n        'history__item-minus'}`}>\n                {transaction.description}\n        <span className=\"history__money\">{transaction.amount} €</span>\n        <button className=\"history__delete\" onClick={()=> delTransaction(transaction.id)}>x</button>\n    </li>\n);\n\n\n{/* <li className=\"history__item  history__item-minus\">Отдал долг\n    <span className=\"history__money\">-10000 ₽</span>\n    <button className=\"history__delete\">x</button>\n    </li> */}\n\nexport default HistoryItem;\n","\nimport React from 'react';\nimport HistoryItem from './HistoryItem';\n// Вытаскиваем из объекта props с помощью {transactions}\n\nexport default function( {transactions, delTransaction}){\n    return(\n        <section className=\"history\">\n                <h3>Umsätze</h3>\n                <ul className=\"history__list\">\n                    {transactions.map(item => <HistoryItem \n                                                    key={item.id} \n                                                    transaction={item} \n                                                    delTransaction={delTransaction}\n                                                    />)}\n                </ul>\n        </section>\n\n    )\n}\n\n// {transactions.map(item => <HistoryItem key={item.id}\n//     transaction={item}/> )}","\nimport React from 'react';\n\nconst Operation = ({addTransaction, addAmount, addDescription, description, amount}) =>(\n    \n        <section className=\"operation\">\n        <h3>Neue Transaktion</h3>\n        <form id=\"form\">\n            <label>\n                <input \n                    type=\"text\" \n                    className=\"operation__fields operation__name\" \n                    placeholder=\"Name der Transaktion\"\n                    onChange = {addDescription}\n                    value={description}\n\n                />\n            </label>\n            <label>\n                <input \n                    type=\"number\" \n                    className=\"operation__fields operation__amount\" \n                    placeholder=\"Geben Sie den Betrag ein\"\n                    onChange = {addAmount}\n                    value={amount}\n                    />\n            </label>\n            <div className=\"operation__btns\">\n                <button \n                    onClick={( )=> addTransaction(false)} \n                    type=\"button\" \n                    className=\"operation__btn operation__btn-subtract\"\n                    >VERBRAUCH</button>\n\n                <button \n                    onClick={( )=> addTransaction(true)} \n                type=\"button\" \n                className=\"operation__btn operation__btn-add\"\n                >EINKOMMEN</button>\n            </div>\n\n        </form>\n    </section>\n    );\n\n\nexport default Operation;","import React, { Component } from 'react';\nimport Total from './components/total/Total';\nimport History from './components/history/History';\nimport Operation from './components/operation/Operation';\n\n\nclass App extends Component {\n\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n    //         transaction: [],\n    //     }\n    //     this.addAmount = this.addAmount.bind(this) Привязываем наш this от state \n    // }\n\n   state = {\n            // transactions: [],\n            transactions: JSON.parse(localStorage.getItem('calcMoney2')) || [],\n            description: '',\n            amount:'',\n            resultIncome: 0,\n            resultExpenses: 0,\n            totalBalance: 0,\n        }\n    \n    componentWillMount(){\n        this.getTotalBalance();\n    }\n    componentDidUpdate(){\n        \n        this.addStorage();\n    }\n\n    // МЕТОДЫ  addTransaction, ... \n    addTransaction = add => {\n        const transactions = [...this.state.transactions];\n\n        const transaction = {\n            //cmr colculator money react\n            id: `cmr${(+new Date()).toString(16)}`,\n            description: this.state.description,\n            amount: parseFloat(this.state.amount),\n            add\n        }\n        transactions.push(transaction);\n        \n\n        this.setState({\n            transactions,\n            description: '',\n            amount: '',\n            \n        }, () => {\n            this.getTotalBalance();\n            \n        });\n    }\n\n    addAmount = e => {\n        \n        // this.state.amount = e.target.value; не работает так как реакт не видит, не перерендеревает страничку \n        this.setState({amount: e.target.value});\n        \n    }\n\n    addDescription = e => {\n        \n        // this.state.amount = e.target.value; не работает так как реакт не видит, не перерендеревает страничку \n        this.setState({description: e.target.value});\n       \n    }\n    getIncome = () => this.state.transactions\n            // .filter((item) => item.add)\n            .reduce((acc, item) => item.add ? item.amount + acc : acc, 0)\n    \n\n\n    getExpenses = () => this.state.transactions\n            // .filter((item) => !item.add)\n            .reduce((acc, item) => !item.add ? item.amount + acc : acc, 0)\n    \n    getTotalBalance = () => {\n        const resultIncome = this.getIncome();\n        const resultExpenses = this.getExpenses();\n        const totalBalance = resultIncome - resultExpenses;\n        console.log(resultIncome)\n        console.log(resultExpenses)\n        console.log(totalBalance)\n\n        this.setState({\n            resultIncome,\n            resultExpenses,\n            totalBalance,\n        })\n    }\n\n    addStorage(){\n        localStorage.setItem('calcMoney2', JSON.stringify(this.state.transactions))\n    }\n\n    delTransaction = (key) => {\n        const transactions = this.state.transactions.filter(item => item.id !== key)\n        this.setState({transactions}, this.getTotalBalance)\n    }\n\n    render(){\n        // console.log(this.state);\n        return ( \n            <>\n                <header>\n                <h1>Geldbeutel</h1>\n                <h2>Kostenrechner</h2>\n                </header>\n\n                <main>\n                    <div className=\"container\">\n                    <Total \n                        resultExpenses={this.state.resultExpenses}\n                        resultIncome={this.state.resultIncome}\n                        totalBalance={this.state.totalBalance}/>\n                    <History \n                        transactions={this.state.transactions}\n                        delTransaction={this.delTransaction}\n                    />\n                    <Operation \n                        addTransaction={this.addTransaction}  \n                        addAmount={this.addAmount}\n                        addDescription={this.addDescription} \n                        description={this.state.description}\n                        amount={this.state.amount}\n                    />\n                    </div>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default App;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './normalize.css';\nimport './style.css';\nimport { render } from '@testing-library/react';\n\n\n\nReactDOM.render( \n    \n    <App/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}